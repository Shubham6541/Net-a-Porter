{"version":3,"sources":["components/Header.js","constants/FiltersType.js","helper/debounce.js","components/Filter.js","containers/FilterPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","AppBar","Toolbar","style","backgroundColor","Typography","variant","filterType","formLabel","type","label","key","value","operator","helperText","debounce","func","wait","timeout","args","context","this","clearTimeout","setTimeout","apply","useRef","require","ComparableFilter","props","filter","addFilter","useState","filterParameters","setFilterParameters","handleChange","name","Number","alert","useEffect","className","FormLabel","TextField","fullWidth","placeholder","onChange","e","target","FormControl","InputLabel","id","Select","MenuItem","SearchableFilter","debounceOnChange","React","useCallback","htmlFor","marginBottom","BooleanFilter","isFirstRun","check","setCheck","current","component","RadioGroup","aria-label","display","FormControlLabel","control","Radio","DateInRangeFilter","Date","date","updatedDateArray","toDateString","length","padding","utils","DateFnsUtils","Grid","container","spacing","item","xs","minWidth","margin","format","KeyboardButtonProps","FormHelperText","defaultProps","bgcolor","borderColor","borderRadius","FilterPage","filters","setFilters","handleFilter","newFilter","a","updatedFilters","push","applyFilters","Card","marginTop","Box","border","marginLeft","marginRight","borderBottom","map","applyFilter","ProductListPage","lazy","App","sm","md","float","justify","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e8fa6aa.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Header = () => (\n  <div>\n    <AppBar>\n      <Toolbar style={{ backgroundColor: '#696969' }}>\n        <Typography variant=\"h4\">Net-a-Porter</Typography>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nexport default Header;\n","export const filterType = [\n  {\n    formLabel: 'Regular Price Comparator',\n    type: 'comparable',\n    label: 'Regular price',\n    key: 'regular_price',\n    value: 0,\n    operator: ''\n  },\n  {\n    formLabel: 'Search by Brand Name',\n    type: 'searchable',\n    label: 'Brand Name',\n    key: 'brand',\n    value: '',\n    operator: 'contains'\n  },\n  {\n    formLabel: 'Stock Availability',\n    type: 'boolean',\n    label: ['In stock', 'out of stock'],\n    key: 'stock_available',\n    value: false,\n    operator: 'equals'\n  },\n  {\n    formLabel: 'Created Between',\n    type: 'dateInRange',\n    label: ['Start date', 'End Date'],\n    key: 'created_at',\n    value: [],\n    operator: 'between',\n    helperText: 'Enter date range to get items list'\n  }\n];\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    const context = this;\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n      func.apply(context, args);\n    }, wait);\n  };\n};\n\n\n","import React, { useEffect, useState } from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport PropTypes from 'prop-types';\nimport './components.css';\nimport { debounce } from '../helper/debounce';\n\nconst { useRef } = require('react');\n\n/* Filtering by property comparison. There are three types of comparator i.e., greater than, smaller\nthan and equals. This filter is dynamic filter and can be used for any property comparison like\ndiscount, regular_price, offer_price etc. by minimal changes(described in readme) */\nexport const ComparableFilter = (props) => {\n  const { filter, addFilter } = props;\n  const [filterParameters, setFilterParameters] = useState({\n    key: filter.key,\n    operator: '',\n    value: ''\n  });\n\n  useEffect(() => {\n    filterParameters.operator !== '' && addFilter(filterParameters);\n  },// eslint-disable-next-line\n  [filterParameters]);\n\n\n  function handleChange(name, value) {\n    if (Number(value) < 0) {\n      return alert('Regular price can not be smaller than 0');\n    }\n    setFilterParameters({\n      ...filterParameters,\n      [name]: (Number(value) ? Number(value) : value)\n    });\n  }\n\n  return (\n    <div className=\"filter\">\n      <FormLabel>{filter.formLabel}</FormLabel>\n      <TextField\n        name=\"value\"\n        type=\"Number\"\n        fullWidth\n        value={filterParameters.value}\n        placeholder={filter.label}\n        onChange={(e) => handleChange(e.target.name, e.target.value)}\n      />\n      <FormControl fullWidth>\n        <InputLabel id=\"operator\">Operator</InputLabel>\n        <Select\n          id=\"operator\"\n          placeholder=\"Operator\"\n          name=\"operator\"\n          fullWidth\n          value={filterParameters.operator}\n          onChange={(e) => handleChange(e.target.name, e.target.value)}\n        >\n          <MenuItem value=\"\"><em>None</em></MenuItem>\n          <MenuItem value=\"equals\">Equal</MenuItem>\n          <MenuItem value=\"greater_than\">Greater</MenuItem>\n          <MenuItem value=\"smaller_than\">Smaller</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\n/* Searchable filter, based on regex match. It also can be used to search any kind of regex pattern.\nIt is dynamic filter and can be used to search any thing like brand or name. */\nexport const SearchableFilter = (props) => {\n  const debounceOnChange = React.useCallback(debounce(handleChange, 500), []);\n  const { filter, addFilter } = props;\n  const [filterParameters, setFilterParameters] = useState({\n    key: filter.key,\n    operator: filter.operator,\n    value: ''\n  });\n\n  useEffect(() => {\n    addFilter(filterParameters);\n    // eslint-disable-next-line\n  }, [filterParameters]);\n\n  function handleChange(name, value) {\n    setFilterParameters({\n      ...filterParameters,\n      [name]: value\n    });\n  }\n\n  return (\n    <div className=\"filter\">\n      <FormLabel htmlFor=\"brand\" style={{ marginBottom: 15 }}>{filter.formLabel}</FormLabel>\n      <br />\n      <TextField\n        id=\"brand\"\n        name=\"value\"\n        fullWidth\n        placeholder={filter.label}\n        onChange={(e) => debounceOnChange(e.target.name, e.target.value)}\n      />\n    </div>\n  );\n}\n;\n\n/* Boolean filter for bi-state properties. It is also a dynamic filter and can be used to filter any attributes\nhaving boolean state. */\nexport const BooleanFilter = (props) => {\n  const debounceOnChange = React.useCallback(debounce(handleChange, 500), []);\n  const isFirstRun = useRef(true);\n  const { filter, addFilter } = props;\n  const [check, setCheck] = useState('');\n  const [filterParameters, setFilterParameters] = useState({\n    key: filter.key,\n    operator: filter.operator,\n    value: true\n  });\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    addFilter(filterParameters);\n  }, // eslint-disable-next-line\n  [filterParameters]);\n\n  function handleChange(name, value) {\n    setFilterParameters({\n      ...filterParameters,\n      [name]: value === 'a'\n    });\n    setCheck(value);\n  }\n\n  return (\n    <div className=\"filter\">\n      <FormControl component=\"fieldset\">\n        <FormLabel>{filter.formLabel}</FormLabel>\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"value\"\n          value={check}\n          onChange={handleChange}\n          style={{ display: 'inline' }}\n        >\n          <FormControlLabel\n            value=\"a\"\n            onChange={(e) => debounceOnChange(e.target.name, e.target.value)}\n            control={<Radio />}\n            label={filter.label[0]}\n          />\n          <FormControlLabel\n            value=\"b\"\n            onChange={(e) => debounceOnChange(e.target.name, e.target.value)}\n            control={<Radio />}\n            label={filter.label[1]}\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>\n  );\n};\n\n/* Date comparator filter, which is used to find the date between range of two given dates. It is also\na dynamic filter and can be used for any date comparison. */\nexport const DateInRangeFilter = (props) => {\n  const { filter, addFilter } = props;\n  const [filterParameters, setFilterParameters] = useState({\n    key: filter.key,\n    operator: filter.operator,\n    value: [new Date('Aug 26 2018'), new Date()]\n  });\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    addFilter(filterParameters);\n  },// eslint-disable-next-line\n  [filterParameters]);\n\n  const handleChange = (date, type) => {\n    if (date > new Date()) {\n      return alert('Future dates are not allowed');\n    }\n    if (type === 'end' && filterParameters.value[0] > date) {\n      return alert('End date should be greater than the start date');\n    }\n    if (type === 'start' && filterParameters.value[1] < date) {\n      return alert('Start date should be smaller than the end date');\n    }\n    const updatedDates = { ...filterParameters };\n    const updatedDateArray = updatedDates.value;\n    if (type === 'start') {\n      updatedDateArray[0] = new Date(date.toDateString());\n    } else {\n      updatedDateArray[1] = new Date(date.toDateString());\n    }\n    updatedDateArray.length === 2 && setFilterParameters({\n      ...filterParameters,\n      value: updatedDateArray\n    });\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <FormControl>\n        <FormLabel>{filter.formLabel}</FormLabel>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container spacing={1}>\n            <Grid item xs style={{ minWidth: 120 }}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                label={filter.label[0]}\n                format=\"dd MMM yyyy\"\n                value={filterParameters.value[0]}\n                onChange={(date) => handleChange(date, 'start')}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n            </Grid>\n            <Grid item xs style={{ minWidth: 120 }}>\n              <KeyboardDatePicker\n                margin=\"normal\"\n                label={filter.label[1]}\n                format=\"dd MMM yyyy\"\n                value={filterParameters.value[1]}\n                onChange={(date) => handleChange(date, 'end')}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n            </Grid>\n          </Grid>\n        </MuiPickersUtilsProvider>\n        <FormHelperText id=\"my-helper-text\">{filter.helperText}</FormHelperText>\n      </FormControl>\n    </div>\n  );\n};\n\nComparableFilter.propTypes = {\n  filter: PropTypes.object,\n  addFilter: PropTypes.func\n};\n\nSearchableFilter.propTypes = {\n  filter: PropTypes.object,\n  addFilter: PropTypes.func\n};\n\nBooleanFilter.propTypes = {\n  filter: PropTypes.object,\n  addFilter: PropTypes.func\n};\n\nDateInRangeFilter.propTypes = {\n  filter: PropTypes.object,\n  addFilter: PropTypes.func\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport { filterType } from '../constants/FiltersType';\nimport {\n  BooleanFilter, ComparableFilter, DateInRangeFilter, SearchableFilter\n} from '../components/Filter';\n\nconst defaultProps = {\n  bgcolor: 'background.card',\n  padding: 1,\n  borderColor: 'black',\n  borderRadius: 4\n};\nconst { useRef } = require('react');\n\n// Logic for UI for filters\nconst FilterPage = (props) => {\n  const [filters, setFilters] = useState([]);\n  const isFirstRun = useRef(true);\n\n  // Combination of filters\n  const handleFilter = async (newFilter) => {\n    const updatedFilters = filters.filter((filter) => filter.key !== newFilter.key);\n    updatedFilters.push(newFilter);\n    setFilters(updatedFilters);\n  };\n\n  // Filter selection based on type provided in Filter Constants\n  const applyFilter = (filter) => {\n    switch (filter.type) {\n      case 'comparable':\n        return <ComparableFilter filter={filter} addFilter={handleFilter} />;\n      case 'searchable':\n        return <SearchableFilter filter={filter} addFilter={handleFilter} />;\n      case 'boolean':\n        return <BooleanFilter filter={filter} addFilter={handleFilter} />;\n      case 'dateInRange':\n        return <DateInRangeFilter filter={filter} addFilter={handleFilter} />;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    // eslint-disable-next-line\n    props.applyFilters(filters);\n\n  }, [filters]);\n\n  return (\n    <div>\n      <Card style={{\n        marginTop: 10, marginBottom: 20, padding: 10, backgroundColor: '#f1fff1'\n      }}\n      >\n        <Box border={1} {...defaultProps}>\n          <div>\n            <Typography\n              variant=\"h5\"\n              style={{\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                display: 'block',\n                borderBottom: '0.05em solid black',\n                padding: '1em'\n              }}\n            >\n              Filters\n            </Typography>\n            {filterType.map((filter) => applyFilter(filter))}\n          </div>\n        </Box>\n      </Card>\n    </div>\n  );\n};\n\nFilterPage.propTypes = {\n  applyFilters: PropTypes.func\n};\nexport default FilterPage;\n","import React, { Suspense, useState } from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header';\nimport FilterPage from './containers/FilterPage';\n\nconst ProductListPage = React.lazy(() => import('./containers/ProductListPage'));\n\nfunction App() {\n  const [filters, setFilters] = useState();\n  const handleApplyFilter = (filters) => {\n    setFilters(filters);\n  };\n  return (\n    <div className=\"App\">\n      <Header />\n      <Grid container spacing={1} style={{ marginTop: 75 }}>\n        <Grid item xs sm={3} md={3} className=\"sidebar\">\n          <FilterPage applyFilters={handleApplyFilter} />\n        </Grid>\n        <Grid item xs={12} sm={8} md={9} className=\"main\" style={{ float: 'right' }} justify=\"center\">\n          <Suspense fallback={<div>Loading...</div>}>\n            <ProductListPage filters={filters} />\n          </Suspense>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}