{"version":3,"sources":["components/ProductList.js","containers/ProductListPage.js"],"names":["ProductDetails","React","lazy","ProgressBar","CircularProgress","style","display","marginLeft","marginRight","ProductList","props","items","useState","count","setCount","Grid","container","spacing","slice","map","item","xs","fallback","info","onBottom","prevState","length","dateInRange","product","created_at","ProductListPage","filters","productList","setProductList","useEffect","axios","post","then","products","data","filteredProductList","updatedProductList","forEach","filter","key","value","operator","price","regular_price","comparable","brand","name","searchable","match","toLowerCase","stock","available","boolean","Date","filterProductList","padding"],"mappings":"kLAOMA,G,MAAiBC,IAAMC,MAAK,kBAAM,kCAElCC,EAAc,kBAAM,kBAACC,EAAA,EAAD,CAAkBC,MAAO,CAAEC,QAAS,QAASC,WAAY,OAAQC,YAAa,WA6BzFC,EA1BK,SAACC,GAAW,IACtBC,EAAUD,EAAVC,MADqB,EAEHC,mBAAS,GAFN,mBAEtBC,EAFsB,KAEfC,EAFe,KAM7B,OACE,6BACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBN,EAAMO,MAAM,EAAGL,EAAQ,IAAIM,KAAI,SAACC,GAAD,OAC9B,kBAACL,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,GACX,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACtB,EAAD,CAAgBuB,KAAMH,UAK9B,kBAAC,IAAD,CAAsBI,SAdK,WAC7BV,GAAS,SAACW,GAAD,OAAeA,EAAY,SAchCZ,EAAQF,EAAMe,QAAW,kBAAC,EAAD,QCtB3BC,EAAc,SAACC,GAAD,OAAaA,EAAQC,YAwD1BC,UAxBS,SAACpB,GAAW,IAC1BqB,EAAYrB,EAAZqB,QADyB,EAEKnB,mBAAS,IAFd,mBAE1BoB,EAF0B,KAEbC,EAFa,KAIjCC,qBAAU,WACRC,IAAMC,KAAK,gBAAiB,CAC1BL,QAAS,KACRM,MAAK,SAACC,GACPL,EAAeK,EAASC,KAAKA,WAE9B,IAEH,IAAMC,EAzCR,SAA2BT,EAASC,GAClC,IAAIS,EAAqBT,EAwBzB,OAvBAS,GAAoD,IAA9BA,EAAmBf,QAAgBK,EAAQW,SAAQ,SAACC,GACrD,kBAAfA,EAAOC,MACTH,EAAqBA,EAAmBE,QAAO,SAACf,GAC9C,OAAIe,EAAOE,MAAQ,GAAyB,iBAApBF,EAAOG,SAXpB,SAAClB,GAAD,OAAaA,EAAQmB,MAAMC,cAAcH,MAY3CI,CAAWrB,GAAWe,EAAOE,MAChCF,EAAOE,MAAQ,GAAyB,iBAApBF,EAAOG,SACxBlB,EAAQmB,MAAMC,cAAcH,MAAQF,EAAOE,QAC9CF,EAAOE,MAAQ,GAAyB,WAApBF,EAAOG,WACxBlB,EAAQmB,MAAMC,cAAcH,QAAUF,EAAOE,UAKvC,UAAfF,EAAOC,MACTH,EAAqBA,EAAmBE,QAAO,SAACf,GAAD,OArBlC,SAACA,GAAD,OAAaA,EAAQsB,MAAMC,KAqBoBC,CAAWxB,GAASyB,MAAMV,EAAOE,MAAMS,mBAElF,oBAAfX,EAAOC,MACTH,EAAqBA,EAAmBE,QAAO,SAACf,GAAD,OAvBrC,SAACA,GAAD,OAAaA,EAAQ2B,MAAMC,UAuBuBC,CAAQ7B,KAAae,EAAOE,UAEvE,eAAfF,EAAOC,MACTH,EAAqBA,EAAmBE,QAAO,SAACf,GAAD,OAAa,IAAI8B,KAAK/B,EAAYC,KAAa,IAAI8B,KAAKf,EAAOE,MAAM,KAAO,IAAIa,KAAK/B,EAAYC,KAAa,IAAI8B,KAAKf,EAAOE,MAAM,WAGhLJ,EAgBqBkB,CAAkB5B,EAASC,GACvD,OACE,yBAAK3B,MAAO,CAAEuD,QAAS,KACpBpB,GAAuB,kBAAC,EAAD,CAAa7B,MAAO6B","file":"static/js/5.0b550b0a.chunk.js","sourcesContent":["import React, { useState, Suspense } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport PropTypes from 'prop-types';\nimport './components.css';\n\nconst ProductDetails = React.lazy(() => import(('./ProductDetails')));\n\nconst ProgressBar = () => <CircularProgress style={{ display: 'block', marginLeft: 'auto', marginRight: 'auto' }} />;\n\n// List of all product items\nconst ProductList = (props) => {\n  const { items } = props;\n  const [count, setCount] = useState(0);\n  const handleOnDocumentBottom = () => {\n    setCount((prevState) => prevState + 12);\n  };\n  return (\n    <div>\n      <Grid container spacing={2}>\n        {items.slice(0, count + 12).map((item) => (\n          <Grid item xs>\n            <Suspense fallback={<ProgressBar />}>\n              <ProductDetails info={item} />\n            </Suspense>\n          </Grid>\n        ))}\n      </Grid>\n      <BottomScrollListener onBottom={handleOnDocumentBottom} />\n      {(count < items.length) && <ProgressBar />}\n    </div>\n  );\n};\n\nProductList.propTypes = {\n    items: PropTypes.array\n};\nexport default ProductList;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport ProductList from '../components/ProductList';\n\nconst comparable = (product) => product.price.regular_price.value;\nconst searchable = (product) => product.brand.name;\nconst boolean = (product) => product.stock.available;\nconst dateInRange = (product) => product.created_at;\n\n// Filtering of items based on available filters\nfunction filterProductList(filters, productList) {\n  let updatedProductList = productList;\n  updatedProductList && updatedProductList.length !== 0 && filters.forEach((filter) => {\n    if (filter.key === 'regular_price') {\n      updatedProductList = updatedProductList.filter((product) => {\n        if (filter.value > 0 && filter.operator === 'greater_than') {\n          return comparable(product) > filter.value;\n        } if (filter.value > 0 && filter.operator === 'smaller_than') {\n          return product.price.regular_price.value < filter.value;\n        } if (filter.value > 0 && filter.operator === 'equals') {\n          return product.price.regular_price.value === filter.value;\n        }\n        return true;\n      });\n    }\n    if (filter.key === 'brand') {\n      updatedProductList = updatedProductList.filter((product) => searchable(product).match(filter.value.toLowerCase()));\n    }\n    if (filter.key === 'stock_available') {\n      updatedProductList = updatedProductList.filter((product) => boolean(product) === filter.value);\n    }\n    if (filter.key === 'created_at') {\n      updatedProductList = updatedProductList.filter((product) => new Date(dateInRange(product)) >= new Date(filter.value[0]) && new Date(dateInRange(product)) <= new Date(filter.value[1]));\n    }\n  });\n  return updatedProductList;\n}\n\n// Logic part for display of products\nconst ProductListPage = (props) => {\n  const { filters } = props;\n  const [productList, setProductList] = useState([]);\n\n  useEffect(() => {\n    axios.post('/api/products', {\n      filters: []\n    }).then((products) => {\n      setProductList(products.data.data);\n    });\n  }, []);\n\n  const filteredProductList = filterProductList(filters, productList);\n  return (\n    <div style={{ padding: 10 }}>\n      {filteredProductList && <ProductList items={filteredProductList} />}\n    </div>\n  );\n};\n\nProductListPage.propTypes = {\n  filters: PropTypes.array\n};\n\nexport default ProductListPage;\n"],"sourceRoot":""}