{"version":3,"sources":["components/ProductList.js","containers/ProductListPage.js"],"names":["ProductDetails","React","lazy","ProgressBar","CircularProgress","style","display","marginLeft","marginRight","ProductList","props","items","useState","count","setCount","Grid","container","spacing","slice","map","item","xs","fallback","info","onBottom","prevState","length","dateInRange","product","ProductListPage","filters","productList","setProductList","useEffect","axios","post","then","products","data","filteredProductList","updatedProductList","forEach","filter","key","value","operator","comparable","price","regular_price","searchable","match","toLowerCase","boolean","Date","filterProductList","padding"],"mappings":"0LAMMA,EAAiBC,IAAMC,MAAK,kBAAM,iCAElCC,EAAc,kBAAM,kBAACC,EAAA,EAAD,CAAkBC,MAAO,CAACC,QAAS,QAASC,WAAY,OAAQC,YAAa,WAwBxFC,EArBK,SAACC,GAAW,IACrBC,EAASD,EAATC,MADoB,EAEDC,mBAAS,GAFR,mBAEpBC,EAFoB,KAEbC,EAFa,KAM3B,OAAO,6BACH,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpBN,EAAMO,MAAM,EAAGL,EAAQ,IAAIM,KAAI,SAAAC,GAAI,OAChC,kBAACL,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,GACT,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAChB,kBAACtB,EAAD,CAAgBuB,KAAMH,UAKtC,kBAAC,IAAD,CAAsBI,SAbK,WAC3BV,GAAS,SAAAW,GAAS,OAAIA,EAAY,SAahCZ,EAAQF,EAAMe,QAAW,kBAAC,EAAD,QCrB7BC,EAAc,SAACC,GAAD,OAAaA,EAAO,YAuDzBC,UApBS,SAACnB,GAAW,IACzBoB,EAAWpB,EAAXoB,QADwB,EAEOlB,mBAAS,IAFhB,mBAExBmB,EAFwB,KAEXC,EAFW,KAI/BC,qBAAU,WACNC,IAAMC,KAAK,gBAAiB,CACxB,QAAW,KACZC,MAAK,SAACC,GACLL,EAAeK,EAASC,KAAKA,WAElC,IAEH,IAAMC,EA5CV,SAA2BT,EAASC,GAChC,IAAIS,EAAqBT,EA2BzB,OA1BAS,GAAoD,IAA9BA,EAAmBd,QAAgBI,EAAQW,SAAQ,SAAAC,GAClD,kBAAfA,EAAOC,MACPH,EAAqBA,EAAmBE,QAAO,SAAAd,GACvC,OAAIc,EAAOE,MAAM,GAAyB,iBAApBF,EAAOG,SAX9B,SAACjB,GAAD,OAAWA,EAAO,MAAP,oBAYCkB,CAAWlB,GAAWc,EAAOE,MAC7BF,EAAOE,MAAM,GAAyB,iBAApBF,EAAOG,SACzBjB,EAAQmB,MAAMC,cAAcJ,MAAQF,EAAOE,QAC5CF,EAAOE,MAAM,GAAyB,WAApBF,EAAOG,WACxBjB,EAAQmB,MAAMC,cAAcJ,QAAUF,EAAOE,UAQjD,UAAfF,EAAOC,MACPH,EAAqBA,EAAmBE,QAAO,SAAAd,GAAO,OAxB/C,SAACA,GAAD,OAAWA,EAAO,MAAP,KAwBwCqB,CAAWrB,GAASsB,MAAMR,EAAOE,MAAMO,mBAElF,oBAAfT,EAAOC,MACPH,EAAqBA,EAAmBE,QAAO,SAAAd,GAAO,OA1BlD,SAACA,GAAD,OAAaA,EAAO,MAAP,UA0ByCwB,CAAQxB,KAAac,EAAOE,UAEvE,eAAfF,EAAOC,MACPH,EAAqBA,EAAmBE,QAAO,SAAAd,GAAO,OAAI,IAAIyB,KAAK1B,EAAYC,KAAa,IAAIyB,KAAKX,EAAOE,MAAM,KAAO,IAAIS,KAAK1B,EAAYC,KAAa,IAAIyB,KAAKX,EAAOE,MAAM,WAGlLJ,EAgBqBc,CAAkBxB,EAASC,GACvD,OACI,yBAAK1B,MAAO,CAACkD,QAAS,KACjBhB,GAAuB,kBAAC,EAAD,CAAa5B,MAAO4B","file":"static/js/5.e1c68713.chunk.js","sourcesContent":["import React, {useState, Suspense} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport './components.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\n\nconst ProductDetails = React.lazy(() => import((`./ProductDetails`)));\n\nconst ProgressBar = () => <CircularProgress style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}/>;\n\n//List of all product items\nconst ProductList = (props) => {\n    const {items} = props;\n    const [count, setCount] = useState(0);\n    const handleOnDocumentBottom = () => {\n        setCount(prevState => prevState + 12)\n    };\n    return <div>\n        <Grid container spacing={2}>\n            {items.slice(0, count + 12).map(item =>\n                <Grid item xs>\n                    <Suspense fallback={<ProgressBar/>}>\n                        <ProductDetails info={item}/>\n                    </Suspense>\n                </Grid>\n            )}\n        </Grid>\n        <BottomScrollListener onBottom={handleOnDocumentBottom}/>\n        {(count < items.length) && <ProgressBar/>}\n    </div>;\n};\n\nexport default ProductList;\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport ProductList from \"../components/ProductList\";\n\nconst comparable = (product)=>product[\"price\"][\"regular_price\"][\"value\"];\nconst searchable = (product)=>product[\"brand\"][\"name\"];\nconst boolean = (product) => product[\"stock\"][\"available\"];\nconst dateInRange = (product) => product[\"created_at\"];\n\n//Filtering of items based on available filters\nfunction filterProductList(filters, productList) {\n    let updatedProductList = productList;\n    updatedProductList && updatedProductList.length !== 0 && filters.forEach(filter => {\n        if (filter.key === 'regular_price') {\n            updatedProductList = updatedProductList.filter(product => {\n                    if (filter.value>0 && filter.operator === 'greater_than') {\n                        return comparable(product) > filter.value\n                    } else if (filter.value>0 && filter.operator === 'smaller_than') {\n                        return product.price.regular_price.value < filter.value\n                    } else if(filter.value>0 && filter.operator === 'equals'){\n                        return product.price.regular_price.value === filter.value\n                    }\n                    else{\n                        return true;\n                    }\n                }\n            )\n        }\n        if (filter.key === 'brand') {\n            updatedProductList = updatedProductList.filter(product => searchable(product).match(filter.value.toLowerCase()))\n        }\n        if (filter.key === 'stock_available') {\n            updatedProductList = updatedProductList.filter(product => boolean(product) === filter.value)\n        }\n        if (filter.key === 'created_at') {\n            updatedProductList = updatedProductList.filter(product => new Date(dateInRange(product)) >= new Date(filter.value[0]) && new Date(dateInRange(product)) <= new Date(filter.value[1]))\n        }\n    });\n    return updatedProductList;\n}\n\n//Logic part for display of products\nconst ProductListPage = (props) => {\n    const {filters} = props;\n    const [productList, setProductList] = useState([]);\n\n    useEffect(() => {\n        axios.post('/api/products', {\n            \"filters\": []\n        }).then((products) => {\n            setProductList(products.data.data);\n        })\n    }, []);\n\n    const filteredProductList = filterProductList(filters, productList);\n    return (\n        <div style={{padding: 10}}>\n            {filteredProductList && <ProductList items={filteredProductList}/>}\n        </div>\n    );\n};\n\nexport default ProductListPage;\n"],"sourceRoot":""}