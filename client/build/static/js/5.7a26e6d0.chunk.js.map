{"version":3,"sources":["components/ProductList.js","containers/ProductListPage.js"],"names":["ProductDetails","React","lazy","ProgressBar","CircularProgress","style","display","marginLeft","marginRight","ProductList","props","items","useState","count","setCount","Grid","container","spacing","slice","map","item","xs","fallback","info","onBottom","prevState","length","ProductListPage","filters","productList","setProductList","useEffect","axios","post","then","products","data","filteredProductList","updatedProductList","console","log","forEach","filter","key","product","price","regular_price","value","brand","name","match","toLowerCase","stock","available","Date","created_at","filterProductList","padding"],"mappings":"0LAMMA,EAAiBC,IAAMC,MAAK,kBAAM,iCAElCC,EAAc,kBAAM,kBAACC,EAAA,EAAD,CAAkBC,MAAO,CAACC,QAAS,QAASC,WAAY,OAAQC,YAAa,WAwBxFC,EArBK,SAACC,GAAW,IACrBC,EAASD,EAATC,MADoB,EAEDC,mBAAS,GAFR,mBAEpBC,EAFoB,KAEbC,EAFa,KAM3B,OAAO,6BACH,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpBN,EAAMO,MAAM,EAAGL,EAAQ,IAAIM,KAAI,SAAAC,GAAI,OAChC,kBAACL,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAE,GACT,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAChB,kBAACtB,EAAD,CAAgBuB,KAAMH,UAKtC,kBAAC,IAAD,CAAsBI,SAbK,WAC3BV,GAAS,SAAAW,GAAS,OAAIA,EAAY,SAahCZ,EAAQF,EAAMe,QAAW,kBAAC,EAAD,QCiBpBC,UApBS,SAACjB,GAAW,IACzBkB,EAAWlB,EAAXkB,QADwB,EAEOhB,mBAAS,IAFhB,mBAExBiB,EAFwB,KAEXC,EAFW,KAI/BC,qBAAU,WACNC,IAAMC,KAAK,gBAAiB,CACxB,QAAW,KACZC,MAAK,SAACC,GACLL,EAAeK,EAASC,KAAKA,WAElC,IAEH,IAAMC,EAjCV,SAA2BT,EAASC,GAChC,IAAIS,EAAqBT,EAiBzB,OAhBAU,QAAQC,IAAIZ,GACZU,GAAoD,IAA9BA,EAAmBZ,QAAgBE,EAAQa,SAAQ,SAAAC,GACnD,iBAAdA,EAAOC,MAEPL,EAAqBA,EAAmBI,QAAO,SAAAE,GAAO,OAAIA,EAAQC,MAAMC,cAAcC,OAASL,EAAOK,UAExF,SAAdL,EAAOC,MACPL,EAAqBA,EAAmBI,QAAO,SAAAE,GAAO,OAAIA,EAAQI,MAAMC,KAAKC,MAAMR,EAAOK,MAAMI,mBAElF,mBAAdT,EAAOC,MACPL,EAAqBA,EAAmBI,QAAO,SAAAE,GAAO,OAAIA,EAAQQ,MAAMC,WAAaX,EAAOK,UAE9E,cAAdL,EAAOC,MACPL,EAAqBA,EAAmBI,QAAO,SAAAE,GAAO,OAAI,IAAIU,KAAKV,EAAQW,aAAe,IAAID,KAAKZ,EAAOK,MAAM,KAAO,IAAIO,KAAKV,EAAQW,aAAe,IAAID,KAAKZ,EAAOK,MAAM,WAG9KT,EAeqBkB,CAAkB5B,EAASC,GACvD,OACI,yBAAKxB,MAAO,CAACoD,QAAS,KACjBpB,GAAuB,kBAAC,EAAD,CAAa1B,MAAO0B","file":"static/js/5.7a26e6d0.chunk.js","sourcesContent":["import React, {useState, Suspense, useEffect} from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport './components.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\n\nconst ProductDetails = React.lazy(() => import((`./ProductDetails`)));\n\nconst ProgressBar = () => <CircularProgress style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}}/>;\n\n//List of all product items\nconst ProductList = (props) => {\n    const {items} = props;\n    const [count, setCount] = useState(0);\n    const handleOnDocumentBottom = () => {\n        setCount(prevState => prevState + 12)\n    };\n    return <div>\n        <Grid container spacing={2}>\n            {items.slice(0, count + 12).map(item =>\n                <Grid item xs>\n                    <Suspense fallback={<ProgressBar/>}>\n                        <ProductDetails info={item}/>\n                    </Suspense>\n                </Grid>\n            )}\n        </Grid>\n        <BottomScrollListener onBottom={handleOnDocumentBottom}/>\n        {(count < items.length) && <ProgressBar/>}\n    </div>;\n};\n\nexport default ProductList;\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport ProductList from \"../components/ProductList\";\n\nfunction filterProductList(filters, productList) {\n    let updatedProductList = productList;\n    console.log(filters);\n    updatedProductList && updatedProductList.length !== 0 && filters.forEach(filter => {\n        if (filter.key == 'regular_price') {\n\n            updatedProductList = updatedProductList.filter(product => product.price.regular_price.value >= filter.value)\n        }\n        if (filter.key == 'brand') {\n            updatedProductList = updatedProductList.filter(product => product.brand.name.match(filter.value.toLowerCase()))\n        }\n        if (filter.key == 'stock_available') {\n            updatedProductList = updatedProductList.filter(product => product.stock.available == filter.value)\n        }\n        if (filter.key == 'created_at') {\n            updatedProductList = updatedProductList.filter(product => new Date(product.created_at) >= new Date(filter.value[0]) && new Date(product.created_at) <= new Date(filter.value[1]))\n        }\n    });\n    return updatedProductList;\n}\n\nconst ProductListPage = (props) => {\n    const {filters} = props;\n    const [productList, setProductList] = useState([]);\n\n    useEffect(() => {\n        axios.post('/api/products', {\n            \"filters\": []\n        }).then((products) => {\n            setProductList(products.data.data);\n        })\n    }, []);\n\n    const filteredProductList = filterProductList(filters, productList);\n    return (\n        <div style={{padding: 10}}>\n            {filteredProductList && <ProductList items={filteredProductList}/>}\n        </div>\n    );\n};\n\nexport default ProductListPage;\n"],"sourceRoot":""}